#include <iostream>
#include <cstdint>
#include "remove_deadstore.h"
using namespace std;
#pragma comment(lib, "thrid/capstone/capstone-4.0.2-win32/capstone.lib")


void show_assembly(csh cs_handle, uint8_t* buff, size_t size)
{
    cs_insn* insn;
    size_t count = cs_disasm(cs_handle, buff, size, 0x1000, 0, &insn);
    if (count > 0) {
        size_t j;
        for (j = 0; j < count; j++) {
            printf("\t%s\t\t%s\n", insn[j].mnemonic, insn[j].op_str);
        }

        cs_free(insn, count);
    }
}


int main()
{
    uint8_t code_buff[] = {
        0x9C, 0x50, 0x56, 0x55, 0x66, 0xBD, 0xAA, 0x32, 0x66, 0x0F, 0xBA, 0xF5, 0x01, 0x53, 0x66, 0x85,
        0xF6, 0x66, 0x0F, 0xB6, 0xDB, 0x57, 0x1B, 0xFE, 0xF6, 0xD3, 0xD3, 0xEB, 0x52, 0x8A, 0xD6, 0x51,
        0xB9, 0x00, 0x00, 0x26, 0x00, 0x51, 0x0F, 0xAB, 0xEE, 0x8B, 0x6C, 0x24, 0x28, 0xF7, 0xD5, 0x0F,
        0xAB, 0xCF, 0x66, 0x99, 0x80, 0xF7, 0x0A, 0x0F, 0xCD, 0x80, 0xD7, 0x2E, 0xF7, 0xD5, 0xD3, 0xD3,
        0x81, 0xE7, 0x22, 0x00, 0x51, 0x78, 0x8D, 0xAD, 0x9B, 0x19, 0x03, 0x13, 0x66, 0x0F, 0xBD, 0xD8,
        0x03, 0xF6, 0x03, 0xE9, 0x0F, 0xC1, 0xFA, 0x8B, 0xF4, 0x2B, 0xF9, 0x66, 0x0F, 0xAC, 0xD3, 0x32,
        0x0F, 0xA3, 0xF7, 0x81, 0xEC, 0xC0, 0x00, 0x00, 0x00, 0xD2, 0xD7, 0x8B, 0xDD, 0xBA, 0x00, 0x00,
        0x26, 0x00, 0x66, 0x0F, 0xA4, 0xC7, 0x1B, 0x2B, 0xDA, 0x80, 0xCA, 0x7F, 0x0F, 0xBA, 0xF7, 0xE7,
        0x8D, 0x3D, 0x7B, 0x96, 0x85, 0x00, 0x23, 0xD5, 0xD2, 0xFA, 0x8B, 0x54, 0x25, 0x00, 0x81, 0xC5,
        0x04, 0x00, 0x00, 0x00, 0x66, 0x85, 0xEC, 0x33, 0xD3
    };

    csh handle;
   
    if (cs_open(CS_ARCH_X86, CS_MODE_32, &handle) != CS_ERR_OK)
        return -1;

    show_assembly(handle, code_buff, sizeof(code_buff));

    if (remove_destore(code_buff, sizeof(code_buff)) == 0)
    {
        puts("-----------------------------------------------");
        show_assembly(handle, code_buff, sizeof(code_buff));
    }

    cs_close(&handle);

    
    return 0;
}